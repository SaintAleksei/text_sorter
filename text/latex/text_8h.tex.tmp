\hypertarget{text_8h}{}\doxysection{text.\+h File Reference}
\label{text_8h}\index{text.h@{text.h}}


Header file with description of functions and structures.  


{\ttfamily \#include $<$stdio.\+h$>$}\newline
{\ttfamily \#include $<$stdlib.\+h$>$}\newline
{\ttfamily \#include $<$string.\+h$>$}\newline
{\ttfamily \#include $<$locale.\+h$>$}\newline
{\ttfamily \#include $<$wctype.\+h$>$}\newline
{\ttfamily \#include $<$wchar.\+h$>$}\newline
Include dependency graph for text.\+h\+:
% FIG 0
\doxysubsection*{Classes}
\begin{DoxyCompactItemize}
\item 
struct \mbox{\hyperlink{struct__line__}{\+\_\+line\+\_\+}}
\item 
struct \mbox{\hyperlink{struct__text__}{\+\_\+text\+\_\+}}
\end{DoxyCompactItemize}
\doxysubsection*{Macros}
\begin{DoxyCompactItemize}
\item 
\mbox{\Hypertarget{text_8h_acf1c58fbef093a9a5c1711151739a33a}\label{text_8h_acf1c58fbef093a9a5c1711151739a33a}} 
\#define {\bfseries P\+I\+E\+C\+E\+\_\+\+O\+F\+\_\+\+S\+H\+IT}~160
\item 
\mbox{\Hypertarget{text_8h_ac7c0207aa5a0e10d378be03b68041350}\label{text_8h_ac7c0207aa5a0e10d378be03b68041350}} 
\#define {\bfseries M\+A\+X\+\_\+\+N\+A\+ME}~64
\item 
\mbox{\Hypertarget{text_8h_ab5889105dcd019008c9448dff61323f6}\label{text_8h_ab5889105dcd019008c9448dff61323f6}} 
\#define {\bfseries I\+N\+IT}~7777777
\item 
\mbox{\Hypertarget{text_8h_a903754b98e2a63ecbecbe54da919f79a}\label{text_8h_a903754b98e2a63ecbecbe54da919f79a}} 
\#define {\bfseries B\+A\+D\+\_\+\+F\+I\+LE}~1
\item 
\mbox{\Hypertarget{text_8h_ac11b892405510eaf7021f7b195f1a6ac}\label{text_8h_ac11b892405510eaf7021f7b195f1a6ac}} 
\#define {\bfseries B\+A\+D\+\_\+\+E\+N\+C\+O\+D\+I\+NG}~2
\item 
\mbox{\Hypertarget{text_8h_a0906683aabcc145ad7a5eb9f4eda980b}\label{text_8h_a0906683aabcc145ad7a5eb9f4eda980b}} 
\#define {\bfseries B\+A\+D\+\_\+\+P\+O\+I\+N\+T\+ER}~3
\item 
\mbox{\Hypertarget{text_8h_a0565bf256bdf03fc299e8a1130f144ea}\label{text_8h_a0565bf256bdf03fc299e8a1130f144ea}} 
\#define {\bfseries B\+A\+D\+\_\+\+N\+A\+ME}~4
\item 
\mbox{\Hypertarget{text_8h_a73ae594ed82f855db3917529cd09fdaa}\label{text_8h_a73ae594ed82f855db3917529cd09fdaa}} 
\#define {\bfseries M\+E\+M\+O\+R\+Y\+\_\+\+T\+R\+O\+U\+B\+LE}~5
\item 
\mbox{\Hypertarget{text_8h_a9e2c36410512ce55eb6939e8a0b24494}\label{text_8h_a9e2c36410512ce55eb6939e8a0b24494}} 
\#define {\bfseries R\+E\+A\+D\+I\+N\+G\+\_\+\+T\+R\+O\+U\+B\+LE}~6
\item 
\mbox{\Hypertarget{text_8h_a6ba8c8feb10e2a4cbc36fc05efa93bf6}\label{text_8h_a6ba8c8feb10e2a4cbc36fc05efa93bf6}} 
\#define {\bfseries L\+O\+G\+I\+C\+\_\+\+T\+R\+O\+U\+B\+LE}~7
\end{DoxyCompactItemize}
\doxysubsection*{Typedefs}
\begin{DoxyCompactItemize}
\item 
\mbox{\Hypertarget{text_8h_a9841b4ee80533b062d59b35f9bd80ccf}\label{text_8h_a9841b4ee80533b062d59b35f9bd80ccf}} 
typedef struct \mbox{\hyperlink{struct__line__}{\+\_\+line\+\_\+}} {\bfseries Line}
\item 
\mbox{\Hypertarget{text_8h_aaaf918c4e9a83699029d39b54b7df4a6}\label{text_8h_aaaf918c4e9a83699029d39b54b7df4a6}} 
typedef struct \mbox{\hyperlink{struct__text__}{\+\_\+text\+\_\+}} {\bfseries Text}
\item 
\mbox{\Hypertarget{text_8h_a84723d244c272f0cc0523c54b1de178d}\label{text_8h_a84723d244c272f0cc0523c54b1de178d}} 
typedef int($\ast$ {\bfseries is\+\_\+letter\+\_\+t}) (wchar\+\_\+t)
\item 
\mbox{\Hypertarget{text_8h_a5bdd61a9388ad20dedbcf5b4779eccef}\label{text_8h_a5bdd61a9388ad20dedbcf5b4779eccef}} 
typedef int($\ast$ {\bfseries letters\+\_\+cmp\+\_\+t}) (wchar\+\_\+t, wchar\+\_\+t)
\item 
\mbox{\Hypertarget{text_8h_a8f0df8fd28deafaa5a35555f06ab57c2}\label{text_8h_a8f0df8fd28deafaa5a35555f06ab57c2}} 
typedef int($\ast$ {\bfseries lines\+\_\+cmp\+\_\+t}) (\mbox{\hyperlink{struct__line__}{Line}}, \mbox{\hyperlink{struct__line__}{Line}}, is\+\_\+letter\+\_\+t, letters\+\_\+cmp\+\_\+t)
\end{DoxyCompactItemize}
\doxysubsection*{Functions}
\begin{DoxyCompactItemize}
\item 
int \mbox{\hyperlink{text_8h_a42240075e95fc1136dd8fd8345fba625}{read\+\_\+text}} (\mbox{\hyperlink{struct__text__}{Text}} $\ast$text\+\_\+pointer, const char $\ast$file\+\_\+name)
\item 
int \mbox{\hyperlink{text_8h_ac80eb2ab88e6a3d83c5f024d48bdd9b5}{write\+\_\+text}} (\mbox{\hyperlink{struct__text__}{Text}} text, const char $\ast$file\+\_\+name)
\item 
int \mbox{\hyperlink{text_8h_a6921d650d0cf2fa005070d58198646e8}{format\+\_\+text}} (\mbox{\hyperlink{struct__text__}{Text}} $\ast$text\+\_\+pointer, is\+\_\+letter\+\_\+t)
\item 
void \mbox{\hyperlink{text_8h_ac698ce5f3d1c983128b6f77b6dd0ffd7}{free\+\_\+text}} (\mbox{\hyperlink{struct__text__}{Text}} $\ast$text\+\_\+pointer)
\item 
void \mbox{\hyperlink{text_8h_a83acb3d9c928dbb06b2398b3a0bd557e}{sort\+\_\+lines}} (\mbox{\hyperlink{struct__line__}{Line}} $\ast$lines, size\+\_\+t lines\+\_\+amt, lines\+\_\+cmp\+\_\+t, is\+\_\+letter\+\_\+t, letters\+\_\+cmp\+\_\+t)
\item 
int \mbox{\hyperlink{text_8h_af78e6d03fb1f2413a0cb749dd0d32a62}{lines\+\_\+cmp}} (\mbox{\hyperlink{struct__line__}{Line}} str1, \mbox{\hyperlink{struct__line__}{Line}} str2, is\+\_\+letter\+\_\+t, letters\+\_\+cmp\+\_\+t)
\item 
int \mbox{\hyperlink{text_8h_a09618083b8df27caa78196c6af488a8d}{rev\+\_\+lines\+\_\+cmp}} (\mbox{\hyperlink{struct__line__}{Line}} str1, \mbox{\hyperlink{struct__line__}{Line}} str2, is\+\_\+letter\+\_\+t, letters\+\_\+cmp\+\_\+t)
\item 
int \mbox{\hyperlink{text_8h_a85e0cb00c9a50457ebf84b465c08decd}{letters\+\_\+cmp\+\_\+en}} (wchar\+\_\+t c1, wchar\+\_\+t c2)
\item 
int \mbox{\hyperlink{text_8h_aabf2527a44b00ab9a0e5045b7a6cbb70}{letters\+\_\+cmp\+\_\+ru}} (wchar\+\_\+t c1, wchar\+\_\+t c2)
\item 
int \mbox{\hyperlink{text_8h_a74d547b6f1370962e36da8083f9f517c}{is\+\_\+letter\+\_\+ru}} (wchar\+\_\+t c)
\item 
int \mbox{\hyperlink{text_8h_a0a08f0fd36b544bc308e22fbf4970c57}{is\+\_\+letter\+\_\+en}} (wchar\+\_\+t c)
\end{DoxyCompactItemize}


\doxysubsection{Detailed Description}
Header file with description of functions and structures. 

\begin{DoxyAuthor}{Author}
Saint\+Aleksei 
\end{DoxyAuthor}
\begin{DoxyDate}{Date}
November 2020
\end{DoxyDate}
This file contains\+: Some helpful defines; The definition of structures Text ({\itshape text}) and Line ({\itshape line}); The definition of all functions; 

\doxysubsection{Function Documentation}
\mbox{\Hypertarget{text_8h_a6921d650d0cf2fa005070d58198646e8}\label{text_8h_a6921d650d0cf2fa005070d58198646e8}} 
\index{text.h@{text.h}!format\_text@{format\_text}}
\index{format\_text@{format\_text}!text.h@{text.h}}
\doxysubsubsection{\texorpdfstring{format\_text()}{format\_text()}}
{\footnotesize\ttfamily int format\+\_\+text (\begin{DoxyParamCaption}\item[{\mbox{\hyperlink{struct__text__}{Text}} $\ast$}]{text\+\_\+pointer,  }\item[{is\+\_\+letter\+\_\+t}]{ }\end{DoxyParamCaption})}

This function is responsible for text formatting 
\begin{DoxyParams}[1]{Parameters}
\mbox{\texttt{ in,out}}  & {\em text\+\_\+pointer} & A pointer to a Text variable that will be formatted \\
\hline
\mbox{\texttt{ in}}  & {\em is\+\_\+letter\+\_\+t} & Function that defines a letter in a text \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
Zero on success and error code otherwise 
\end{DoxyReturn}
\mbox{\Hypertarget{text_8h_ac698ce5f3d1c983128b6f77b6dd0ffd7}\label{text_8h_ac698ce5f3d1c983128b6f77b6dd0ffd7}} 
\index{text.h@{text.h}!free\_text@{free\_text}}
\index{free\_text@{free\_text}!text.h@{text.h}}
\doxysubsubsection{\texorpdfstring{free\_text()}{free\_text()}}
{\footnotesize\ttfamily void free\+\_\+text (\begin{DoxyParamCaption}\item[{\mbox{\hyperlink{struct__text__}{Text}} $\ast$}]{text\+\_\+pointer }\end{DoxyParamCaption})}

This function is responsible for freeing text 
\begin{DoxyParams}[1]{Parameters}
\mbox{\texttt{ in,out}}  & {\em text\+\_\+pointer} & A pointer to a Text variable that will be freed \\
\hline
\end{DoxyParams}
\mbox{\Hypertarget{text_8h_a0a08f0fd36b544bc308e22fbf4970c57}\label{text_8h_a0a08f0fd36b544bc308e22fbf4970c57}} 
\index{text.h@{text.h}!is\_letter\_en@{is\_letter\_en}}
\index{is\_letter\_en@{is\_letter\_en}!text.h@{text.h}}
\doxysubsubsection{\texorpdfstring{is\_letter\_en()}{is\_letter\_en()}}
{\footnotesize\ttfamily int is\+\_\+letter\+\_\+en (\begin{DoxyParamCaption}\item[{wchar\+\_\+t}]{c }\end{DoxyParamCaption})}

This function defines english letter 
\begin{DoxyParams}[1]{Parameters}
\mbox{\texttt{ in}}  & {\em c} & Any symbol in unicode \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
1 if c is english letter and zero otherwise 
\end{DoxyReturn}
\mbox{\Hypertarget{text_8h_a74d547b6f1370962e36da8083f9f517c}\label{text_8h_a74d547b6f1370962e36da8083f9f517c}} 
\index{text.h@{text.h}!is\_letter\_ru@{is\_letter\_ru}}
\index{is\_letter\_ru@{is\_letter\_ru}!text.h@{text.h}}
\doxysubsubsection{\texorpdfstring{is\_letter\_ru()}{is\_letter\_ru()}}
{\footnotesize\ttfamily int is\+\_\+letter\+\_\+ru (\begin{DoxyParamCaption}\item[{wchar\+\_\+t}]{c }\end{DoxyParamCaption})}

This function defines russian letter 
\begin{DoxyParams}[1]{Parameters}
\mbox{\texttt{ in}}  & {\em c} & Any symbol in unicode \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
1 if c is russian letter and zero otherwise 
\end{DoxyReturn}
\mbox{\Hypertarget{text_8h_a85e0cb00c9a50457ebf84b465c08decd}\label{text_8h_a85e0cb00c9a50457ebf84b465c08decd}} 
\index{text.h@{text.h}!letters\_cmp\_en@{letters\_cmp\_en}}
\index{letters\_cmp\_en@{letters\_cmp\_en}!text.h@{text.h}}
\doxysubsubsection{\texorpdfstring{letters\_cmp\_en()}{letters\_cmp\_en()}}
{\footnotesize\ttfamily int letters\+\_\+cmp\+\_\+en (\begin{DoxyParamCaption}\item[{wchar\+\_\+t}]{c1,  }\item[{wchar\+\_\+t}]{c2 }\end{DoxyParamCaption})}

This function is compare two englsih letters 
\begin{DoxyParams}[1]{Parameters}
\mbox{\texttt{ in}}  & {\em c1} & First letter in unicode \\
\hline
\mbox{\texttt{ in}}  & {\em c2} & Second letter in unicode \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
Positive integer if c1 \char`\"{}more\char`\"{} than c2, negative integer otherwise and zero if they are same 
\end{DoxyReturn}
\mbox{\Hypertarget{text_8h_aabf2527a44b00ab9a0e5045b7a6cbb70}\label{text_8h_aabf2527a44b00ab9a0e5045b7a6cbb70}} 
\index{text.h@{text.h}!letters\_cmp\_ru@{letters\_cmp\_ru}}
\index{letters\_cmp\_ru@{letters\_cmp\_ru}!text.h@{text.h}}
\doxysubsubsection{\texorpdfstring{letters\_cmp\_ru()}{letters\_cmp\_ru()}}
{\footnotesize\ttfamily int letters\+\_\+cmp\+\_\+ru (\begin{DoxyParamCaption}\item[{wchar\+\_\+t}]{c1,  }\item[{wchar\+\_\+t}]{c2 }\end{DoxyParamCaption})}

This function is compare two russian letters 
\begin{DoxyParams}[1]{Parameters}
\mbox{\texttt{ in}}  & {\em c1} & First letter in unicode \\
\hline
\mbox{\texttt{ in}}  & {\em c2} & Second letter in unicode \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
Positive integer if c1 \char`\"{}more\char`\"{} than c2, negative integer otherwise and zero if they are same 
\end{DoxyReturn}
\mbox{\Hypertarget{text_8h_af78e6d03fb1f2413a0cb749dd0d32a62}\label{text_8h_af78e6d03fb1f2413a0cb749dd0d32a62}} 
\index{text.h@{text.h}!lines\_cmp@{lines\_cmp}}
\index{lines\_cmp@{lines\_cmp}!text.h@{text.h}}
\doxysubsubsection{\texorpdfstring{lines\_cmp()}{lines\_cmp()}}
{\footnotesize\ttfamily int lines\+\_\+cmp (\begin{DoxyParamCaption}\item[{\mbox{\hyperlink{struct__line__}{Line}}}]{str1,  }\item[{\mbox{\hyperlink{struct__line__}{Line}}}]{str2,  }\item[{is\+\_\+letter\+\_\+t}]{,  }\item[{letters\+\_\+cmp\+\_\+t}]{ }\end{DoxyParamCaption})}

This function is responsible for comparsion lines in lexicographical order ignoring all characters except letters 
\begin{DoxyParams}[1]{Parameters}
\mbox{\texttt{ in}}  & {\em str1} & First line \\
\hline
\mbox{\texttt{ in}}  & {\em str2} & Second line \\
\hline
\mbox{\texttt{ in}}  & {\em is\+\_\+letter\+\_\+t} & Function that defines a letter in a line \\
\hline
\mbox{\texttt{ in}}  & {\em letters\+\_\+cmp\+\_\+t} & Function that compare two letterts \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
Positive integer if str1 \char`\"{}more\char`\"{} than str2, negative integer otherwise and zero if they are same 
\end{DoxyReturn}
\mbox{\Hypertarget{text_8h_a42240075e95fc1136dd8fd8345fba625}\label{text_8h_a42240075e95fc1136dd8fd8345fba625}} 
\index{text.h@{text.h}!read\_text@{read\_text}}
\index{read\_text@{read\_text}!text.h@{text.h}}
\doxysubsubsection{\texorpdfstring{read\_text()}{read\_text()}}
{\footnotesize\ttfamily int read\+\_\+text (\begin{DoxyParamCaption}\item[{\mbox{\hyperlink{struct__text__}{Text}} $\ast$}]{text\+\_\+pointer,  }\item[{const char $\ast$}]{file\+\_\+name }\end{DoxyParamCaption})}

This function is responsible for reading text from a file into memory 
\begin{DoxyParams}[1]{Parameters}
\mbox{\texttt{ in}}  & {\em file\+\_\+name} & Input file name \\
\hline
\mbox{\texttt{ in,out}}  & {\em text\+\_\+pointer} & A pointer to a variable that will hold the text \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
Zero on success and error code otherwise 
\end{DoxyReturn}
\mbox{\Hypertarget{text_8h_a09618083b8df27caa78196c6af488a8d}\label{text_8h_a09618083b8df27caa78196c6af488a8d}} 
\index{text.h@{text.h}!rev\_lines\_cmp@{rev\_lines\_cmp}}
\index{rev\_lines\_cmp@{rev\_lines\_cmp}!text.h@{text.h}}
\doxysubsubsection{\texorpdfstring{rev\_lines\_cmp()}{rev\_lines\_cmp()}}
{\footnotesize\ttfamily int rev\+\_\+lines\+\_\+cmp (\begin{DoxyParamCaption}\item[{\mbox{\hyperlink{struct__line__}{Line}}}]{str1,  }\item[{\mbox{\hyperlink{struct__line__}{Line}}}]{str2,  }\item[{is\+\_\+letter\+\_\+t}]{,  }\item[{letters\+\_\+cmp\+\_\+t}]{ }\end{DoxyParamCaption})}

This function is responsible for comparsion lines in reverse lexicographical order ignoring all characters except letters 
\begin{DoxyParams}[1]{Parameters}
\mbox{\texttt{ in}}  & {\em str1} & First line \\
\hline
\mbox{\texttt{ in}}  & {\em str2} & Second line \\
\hline
\mbox{\texttt{ in}}  & {\em is\+\_\+letter\+\_\+t} & Function that defines a letter in a line \\
\hline
\mbox{\texttt{ in}}  & {\em letters\+\_\+cmp\+\_\+t} & Function that compare two letterts \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
Positive integer if str1 \char`\"{}more\char`\"{} than str2, negative integer otherwise and zero if they are same 
\end{DoxyReturn}
\mbox{\Hypertarget{text_8h_a83acb3d9c928dbb06b2398b3a0bd557e}\label{text_8h_a83acb3d9c928dbb06b2398b3a0bd557e}} 
\index{text.h@{text.h}!sort\_lines@{sort\_lines}}
\index{sort\_lines@{sort\_lines}!text.h@{text.h}}
\doxysubsubsection{\texorpdfstring{sort\_lines()}{sort\_lines()}}
{\footnotesize\ttfamily void sort\+\_\+lines (\begin{DoxyParamCaption}\item[{\mbox{\hyperlink{struct__line__}{Line}} $\ast$}]{lines,  }\item[{size\+\_\+t}]{lines\+\_\+amt,  }\item[{lines\+\_\+cmp\+\_\+t}]{,  }\item[{is\+\_\+letter\+\_\+t}]{,  }\item[{letters\+\_\+cmp\+\_\+t}]{ }\end{DoxyParamCaption})}

This function is responsible for sorting lines 
\begin{DoxyParams}[1]{Parameters}
\mbox{\texttt{ in,out}}  & {\em lines} & A pointer to lines array that will be sorted \\
\hline
\mbox{\texttt{ in}}  & {\em lines\+\_\+amt} & Amount of lines in array \\
\hline
\mbox{\texttt{ in}}  & {\em lines\+\_\+cmp\+\_\+t} & Function that compare two lines \\
\hline
\mbox{\texttt{ in}}  & {\em is\+\_\+letter\+\_\+t} & Function that defines a letter in a line \\
\hline
\mbox{\texttt{ in}}  & {\em letters\+\_\+cmp\+\_\+t} & Function that compare two letterts \\
\hline
\end{DoxyParams}
\mbox{\Hypertarget{text_8h_ac80eb2ab88e6a3d83c5f024d48bdd9b5}\label{text_8h_ac80eb2ab88e6a3d83c5f024d48bdd9b5}} 
\index{text.h@{text.h}!write\_text@{write\_text}}
\index{write\_text@{write\_text}!text.h@{text.h}}
\doxysubsubsection{\texorpdfstring{write\_text()}{write\_text()}}
{\footnotesize\ttfamily int write\+\_\+text (\begin{DoxyParamCaption}\item[{\mbox{\hyperlink{struct__text__}{Text}}}]{text,  }\item[{const char $\ast$}]{file\+\_\+name }\end{DoxyParamCaption})}

This function is responsible for writing text into a file 
\begin{DoxyParams}[1]{Parameters}
\mbox{\texttt{ in}}  & {\em file\+\_\+name} & Input file name \\
\hline
\mbox{\texttt{ in}}  & {\em text} & The text to be written \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
Zero on success and error code otherwise 
\end{DoxyReturn}
